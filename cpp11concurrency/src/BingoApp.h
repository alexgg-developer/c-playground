#pragma once

#include <iostream>
#include <mutex> //THREADS
#include <thread>
#include <vector>
#include <ctime>

using namespace std;
namespace BingoApp
{
	int bingoWinner = -1;

	const int MAX_PLAYERS = 10;
	const int MAX_TRIAL = 5;
	const int BINGO_NUMBER = 100;
		
	void set_winner(int x) { bingoWinner = x; }

	std::once_flag winner_flag;

	int main(int argc, char *argv[])
	{
		std::thread players[MAX_PLAYERS];
		std::srand(std::time(NULL));
		for (int i = 0; i < MAX_PLAYERS; ++i) {
			players[i] = std::thread([=] {
				for (int j = 0; j < MAX_TRIAL; ++j) {
					int num = rand() % (BINGO_NUMBER + 1);
					cout << "Generated by thread " << i + 1 << " Number: " << num << endl;
					if (num == BINGO_NUMBER) {
						call_once(winner_flag, set_winner, i + 1);
						cout << "I have done bingo " << i + 1 << endl;
					}
				}
			});
		}

		for (int i = 0; i < MAX_PLAYERS; ++i) {
			players[i].join();
		}
		return 0;
	}
}
